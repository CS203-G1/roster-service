server.port = 8080

spring.jpa.database=POSTGRESQL
spring.datasource.url=jdbc:postgresql://${DATABASE_URL}:${DATABASE_PORT}/${DATABASE_NAME}
spring.datasource.username=${DATABASE_USERNAME}
spring.datasource.password=${DATABASE_PASSWORD}

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true 

#aws
aws.access-key=${AWS_ACCESS_KEY}
aws.access-secret=${AWS_ACCESS_KEY}
aws.default-region=${AWS_REGION}

#cognito user pool
aws.cognito.clientId=${COGNITO_CLIENT_ID}
aws.cognito.userPoolId=${COGNITO_POOL_ID}
aws.cognito.region=${AWS_REGION}
aws.cognito.connectionTimeout=2000
aws.cognito.readTimeout=2000
aws.cognito.jwk = https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_POOL_ID}/.well-known/jwks.json

#spring security integration with cognito
spring.security.oauth2.resourceserver.jwt.issuer-uri=https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_POOL_ID}
security.oauth2.resource.userInfoUri=https://${COGNITO_DOMAIN}.auth.${AWS_REGION}.amazoncognito.com/oauth2/userInfo
security.oauth2.resource.tokenInfoUri=https://${COGNITO_DOMAIN}.auth.${AWS_REGION}.amazoncognito.com/oauth2/token
security.oauth2.resource.jwk.key-set-uri=https://cognito-idp.${AWS_REGION}.amazonaws.com/${COGNITO_POOL_ID}/.well-known/jwks.json
security.oauth2.client.clientId=${COGNITO_CLIENT_ID}
